require('./color');

exports.show = [
  color("                .-..-.																		      ", "blue"),
  "																																							",
  color("Sails", "yellow") + color("-inverse", "blue") + color("-model", "red") + color("<|    .-..-.	" + require('../package.json').version, "green"),
  color("                    |\										", "green"),
  color("    ~    ~   ~     /|.\ 									", "green"),
  color("       ~  ~       / || \									", "green"),
  color("         ~  ~   ,'  |'  \									", "green"),
  color("             .-'.-==|/_--'								", "green"),
  color("             `--'-------' 								", "green"),
  color("   _--__--_---__---___--__---__--___      ", "blue"),
  color(" __---__--__---___--__---___--_-_---___    ", "blue"),
  " ----------------------------------------------------------",
  " :: " + (new Date()).toString(),
  " ----------------------------------------------------------",
  'Example:',
  '  $ mkdir strapi-output',
  '  $ cd strapi-output',
  '  $ strapi-inverse-model -u postgres -p postgres -d my_postgredb -t pg -m -v -c',
  '',
  'User         : postgres',
  'Password     : postgres',
  'Database     : my_postgredb',
  'Host         : localhost',
  'Api	       : /home/julian/Documents/strapi-output/generatedapi',
  'DB           : pg',
  'Schema (pg)  : public',
  '=====================================',
  '',
  '    Note: Copy generated code to      => your/project_strapi/api',
  ' Then: ',
  ' $ cd your/project_strapi/',
  ' $ strapi start',
  '',
  " ---------------------------------------------------------------",
  'Options:',
  ' -u, --user        User of database',
  ' -p, --pass        Password of database',
  ' -d, --database    Database name',
  ' -h, --host        Host server               Default: localhost',
  ' -o, --output      Folder output api        Default: Folder generatedapi',
  ' -m, --models      Folder output models      Default: Folder actual',
  ' -c, --controllers Folder output controllers Default: Folder actual',
  ' -t, --type        Type of database: mysql|postgres|mongodb  Default: mysql',
  ' -s, --schema      (Only PostgreSQL) Schema database postgres: Default: public',
  ' -f, --file        (Only MySQL) .sql file path entry' + color(' (Experimental)', 'yellow'),
  '\n',
  '# Generate all (Model, View and Controller)',
  '$ sails-inverse-model -g all --name Pet -a "name:string:r:k owner:string"',
  '',
  'Where:',
  '--------------------------------------------',
  '|Param | Description   |     Example       |',
  '|------|--------------|-------------------|',
  '|   r  | Required      | catname:string:r  |',
  '|   u  | Unique        | catname:string:u  |',
  '|   a  | Autoincrement | index:integer:a   |',
  '|   k  | Primary Key   | index:integer:k   |',
  '--------------------------------------------',
  'You can also set all three parameters at the same time, for example: index:integer:a:u:r'
];
